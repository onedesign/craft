- pipeline: "Deploy to Staging"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "feature/buddy-config"
  ref_type: "BRANCH"
  target_site_url: "${target_url}"
  trigger_condition: "ALWAYS"
  actions:
    - action: "Composer install"
      type: "BUILD"
      working_directory: "/buddy/${project_name}"
      docker_image_name: "library/php"
      docker_image_tag: "7.2-stretch"
      execute_commands:
        - "composer validate"
        - "composer install"
      setup_commands:
        - "apt-get update && apt-get install -y git zip"
        - "curl -L https://phar.phpunit.de/phpunit.phar -o /usr/local/bin/phpunit"
        - "chmod +x /usr/local/bin/phpunit"
        - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
        - "# php ext gd"
        - "apt-get install -y libfreetype6-dev"
        - "apt-get install -y libjpeg62-turbo-dev"
        - "apt-get install -y libpng-dev"
        - "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/"
        - "docker-php-ext-install gd"
        - "# php ext zip"
        - "apt-get install -y zip"
        - "apt-get install -y unzip"
        - "apt-get install -y zlib1g-dev"
        - "docker-php-ext-install zip"
        - "# php ext pdo_mysql"
        - "docker-php-ext-configure pdo_mysql --with-pdo-mysql"
        - "docker-php-ext-install pdo_mysql"
      mount_filesystem_path: "/buddy/${project_name}"
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Execute: npm install"
      type: "BUILD"
      working_directory: "/buddy/${project_name}"
      docker_image_name: "library/node"
      docker_image_tag: "10"
      execute_commands:
        - "# yarn install"
        - "npm ci"
        - "npm run build"
      setup_commands:
        - "npm install -g gulp"
      mount_filesystem_path: "/buddy/$PROJECT_NAME"
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Upload files to Staging"
      type: "SFTP"
      input_type: "BUILD_ARTIFACTS"
      remote_path: "~/public_html/deploy-cache"
      login: "$SSH_USER"
      host: "$SSH_HOST"
      port: "22"
      env_key: "secure!C/X8rvmyfu+LTKn5PiK+dg=="
      authentication_mode: "ENV_KEY"
      deployment_excludes:
        - ".env"
        - ".git"
        - ".gitignore"
        - "/.cache/"
        - "/.composer/"
        - "/.local/"
        - "/.npm/"
        - "/bower_components/"
        - "/gulp/"
        - "/node_modules/"
        - "/resources/"
        - "/src/"
        - "gulpfile.js"
        - "package.json"
        - "README.md"
    - action: "Post-deployment action"
      type: "SSH_COMMAND"
      working_directory: "~/public_html/"
      login: "$SSH_USER"
      host: "$SSH_HOST"
      port: "22"
      env_key: "secure!C/X8rvmyfu+LTKn5PiK+dg=="
      authentication_mode: "ENV_KEY"
      commands:
        - "curl -sS https://raw.githubusercontent.com/onedesign/atomic-deployments/master/atomic-deploy.php | php -- --revision=${execution.to_revision.revision} --symlinks='{\"shared/config/.env\":\".env\",\"shared/storage\":\"storage\", \"shared/cpresources\":\"web/cpresources\"}'"
      run_as_script: true
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Run Craft Commands"
      type: "SSH_COMMAND"
      working_directory: "~/public_html/current/"
      login: "$SSH_USER"
      host: "$SSH_HOST"
      port: "22"
      env_key: "secure!C/X8rvmyfu+LTKn5PiK+dg=="
      authentication_mode: "ENV_KEY"
      commands:
        - "echo \"Update craft permissions\""
        - "chmod +x ./craft"
        - "echo \"Running migrations\""
        - "./craft migrate/all"
        - "echo \"Syncing project config\""
        - "./craft project-config/sync"
      run_as_script: true
      shell: "BASH"
      trigger_condition: "ALWAYS"
  variables:
    - key: "SSH_HOST"
      value: ""
      id:
    - key: "ssh_password"
      value: "secure!hpiKG55XE8AI1AazXPTbPQ=="
      id: 279547
    - key: "$SSH_USER"
      value: ""
      id: 279546
