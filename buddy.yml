- pipeline: "Test"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "refs/heads/*"
  ref_type: "WILDCARD"
  trigger_condition: "ALWAYS"
  actions:
    - action: "Test"
      type: "BUILD"
      working_directory: "/buddy/app"
      docker_image_name: "library/node"
      docker_image_tag: "lts"
      execute_commands:
        - "npm ci"
        - "$test_command"
      setup_commands:
        - "npm install -g gulp grunt-cli"
      mount_filesystem_path: "/buddy/app"
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Run Build"
      type: "RUN_NEXT_PIPELINE"
      comment: "Triggered by $BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID"
      revision: "INHERIT"
      trigger_condition: "ALWAYS"
      next_project_name: "$BUDDY_PROJECT_NAME"
      next_pipeline_name: "Build & Deploy Staging"
- pipeline: "Build & Deploy Staging"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "dev"
  ref_type: "BRANCH"
  trigger_condition: "ALWAYS"
  actions:
    - action: "Composer Install"
      type: "BUILD"
      working_directory: "/buddy/app"
      docker_image_name: "library/php"
      docker_image_tag: "7.2-stretch"
      execute_commands:
        - "composer validate"
        - "composer install"
      setup_commands:
        - "echo \"memory_limit=-1\" >> /usr/local/etc/php/conf.d/buddy.ini"
        - "apt-get update && apt-get install -y git zip"
        - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
        - "# php ext gd"
        - "apt-get install -y libfreetype6-dev"
        - "apt-get install -y libjpeg62-turbo-dev"
        - "apt-get install -y libpng-dev"
        - "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/"
        - "docker-php-ext-install gd"
        - "# php ext zip"
        - "apt-get install -y zip"
        - "apt-get install -y unzip"
        - "apt-get install -y zlib1g-dev"
        - "docker-php-ext-install zip"
        - "# php ext pdo_mysql"
        - "docker-php-ext-configure pdo_mysql --with-pdo-mysql"
        - "docker-php-ext-install pdo_mysql"
      cached_dirs:
        - "/vendor"
        - "/vendor/*"
        - "/vendor/**/**"
      mount_filesystem_path: "/buddy/app"
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Build"
      type: "BUILD"
      working_directory: "/buddy/app"
      docker_image_name: "library/node"
      docker_image_tag: "lts"
      execute_commands:
        - "npm install"
        - "$build_command"
      setup_commands:
        - "npm install -g gulp grunt-cli"
      mount_filesystem_path: "/buddy/app"
      shell: "BASH"
      trigger_condition: "ALWAYS"
      variables:
        - id: 298194
          key: "build_command"
          value: "npm run build"
          description: "Command to build your project"
    - action: "Deploy to Staging"
      type: "SFTP"
      input_type: "BUILD_ARTIFACTS"
      remote_path: "~/public_html/deploy-cache/"
      login: "$ssh_user"
      password: "secure!XYi3cq28BpJ9/VTHbC76Ng=="
      host: "$ssh_host"
      port: "22"
      authentication_mode: "PASS"
      deployment_excludes:
        - ".env"
        - ".env.php"
        - ".git"
        - ".gitignore"
        - "/.cache/"
        - "/.composer/"
        - "/.local/"
        - "/.npm/"
        - "/bower_components/"
        - "/gulp/"
        - "/node_modules/"
        - "/resources/"
        - "/src/"
        - "auth.json"
        - "bower.json"
        - "env.sample.php"
        - "gulpfile.js"
        - "package.json"
        - "README.md"
    - action: "Atomic Deploy"
      type: "SSH_COMMAND"
      working_directory: "~/public_html/"
      login: "$ssh_user"
      password: "secure!XYi3cq28BpJ9/VTHbC76Ng=="
      host: "$ssh_host"
      port: "22"
      authentication_mode: "PASS"
      commands:
        - "curl -sS https://raw.githubusercontent.com/onedesign/atomic-deployments/master/atomic-deploy.php | php -- --revision=${execution.to_revision.revision} --symlinks='{\"shared/config/.env\":\".env\",\"shared/storage\":\"storage\", \"shared/cpresources\":\"web/cpresources\"}'"
      run_as_script: true
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Post Deploy migrations"
      type: "SSH_COMMAND"
      working_directory: "~/public_html/current/"
      login: "$ssh_user"
      password: "secure!XYi3cq28BpJ9/VTHbC76Ng=="
      host: "$ssh_host"
      port: "22"
      authentication_mode: "PASS"
      commands:
        - "echo \"Updating craft permissions\""
        - "chmod +x ./craft"
        - "echo \"Running migrations\""
        - "./craft migrate/all"
        - "#echo \"Syncing project config\""
        - "#./craft project-config/sync"
      run_as_script: true
      shell: "BASH"
      trigger_condition: "ALWAYS"
- pipeline: "Build & Deploy Production"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  ref_type: "BRANCH"
  trigger_condition: "ALWAYS"
  actions:
    - action: "Composer Install"
      type: "BUILD"
      working_directory: "/buddy/app"
      docker_image_name: "library/php"
      docker_image_tag: "7.2-stretch"
      execute_commands:
        - "composer validate"
        - "composer install"
      setup_commands:
        - "echo \"memory_limit=-1\" >> /usr/local/etc/php/conf.d/buddy.ini"
        - "apt-get update && apt-get install -y git zip"
        - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
        - "# php ext gd"
        - "apt-get install -y libfreetype6-dev"
        - "apt-get install -y libjpeg62-turbo-dev"
        - "apt-get install -y libpng-dev"
        - "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/"
        - "docker-php-ext-install gd"
        - "# php ext zip"
        - "apt-get install -y zip"
        - "apt-get install -y unzip"
        - "apt-get install -y zlib1g-dev"
        - "docker-php-ext-install zip"
        - "# php ext pdo_mysql"
        - "docker-php-ext-configure pdo_mysql --with-pdo-mysql"
        - "docker-php-ext-install pdo_mysql"
      cached_dirs:
        - "/vendor"
        - "/vendor/*"
        - "/vendor/**/**"
      mount_filesystem_path: "/buddy/app"
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Build"
      type: "BUILD"
      working_directory: "/buddy/app"
      docker_image_name: "library/node"
      docker_image_tag: "lts"
      execute_commands:
        - "npm install"
        - "$build_command"
      setup_commands:
        - "npm install -g gulp grunt-cli"
      mount_filesystem_path: "/buddy/app"
      shell: "BASH"
      trigger_condition: "ALWAYS"
      variables:
        - id: 298194
          key: "build_command"
          value: "npm run build"
          description: "Command to build your project"
    - action: "Deploy to Staging"
      type: "SFTP"
      input_type: "BUILD_ARTIFACTS"
      remote_path: "~/public_html/deploy-cache/"
      login: "$ssh_user"
      password: "secure!XYi3cq28BpJ9/VTHbC76Ng=="
      host: "$ssh_host"
      port: "22"
      authentication_mode: "PASS"
      deployment_excludes:
        - ".env"
        - ".env.php"
        - ".git"
        - ".gitignore"
        - "/.cache/"
        - "/.composer/"
        - "/.local/"
        - "/.npm/"
        - "/bower_components/"
        - "/gulp/"
        - "/node_modules/"
        - "/resources/"
        - "/src/"
        - "auth.json"
        - "bower.json"
        - "env.sample.php"
        - "gulpfile.js"
        - "package.json"
        - "README.md"
    - action: "Atomic Deploy"
      type: "SSH_COMMAND"
      working_directory: "~/public_html/"
      login: "$ssh_user"
      password: "secure!XYi3cq28BpJ9/VTHbC76Ng=="
      host: "$ssh_host"
      port: "22"
      authentication_mode: "PASS"
      commands:
        - "curl -sS https://raw.githubusercontent.com/onedesign/atomic-deployments/master/atomic-deploy.php | php -- --revision=${execution.to_revision.revision} --symlinks='{\"shared/config/.env\":\".env\",\"shared/storage\":\"storage\", \"shared/cpresources\":\"web/cpresources\"}'"
      run_as_script: true
      shell: "BASH"
      trigger_condition: "ALWAYS"
    - action: "Post Deploy migrations"
      type: "SSH_COMMAND"
      working_directory: "~/public_html/current/"
      login: "$ssh_user"
      password: "secure!XYi3cq28BpJ9/VTHbC76Ng=="
      host: "$ssh_host"
      port: "22"
      authentication_mode: "PASS"
      commands:
        - "echo \"Updating craft permissions\""
        - "chmod +x ./craft"
        - "echo \"Running migrations\""
        - "./craft migrate/all"
        - "#echo \"Syncing project config\""
        - "#./craft project-config/sync"
      run_as_script: true
      shell: "BASH"
      trigger_condition: "ALWAYS"

